#!/bin/zsh

prompt_simple_setup() {
	# Load needed functions
	autoload -Uz add-zsh-hook
	autoload -Uz colors && colors
	autoload -Uz vcs_info

	# Options for simple prompt
	##################
	prompt_opts=(cr subst percent)
	PROMPT_EOL_MARK=''

	# Setup vcs_info
	zstyle ':vcs_info:*' enable git
	zstyle ':vcs_info:*' use-simple true
	zstyle ':vcs_info:*' max-exports 2
	zstyle ':vcs_info:git*' formats ' %b'
	zstyle ':vcs_info:git*' actionformats ' %b|%a'

	# Setup misc. prompts
	SPROMPT="zsh: correct %R to %r ([Y]es/[N]o/[E]dit/[A]bort) "

	# Initialize precmd hooks
	##################
	add-zsh-hook precmd vcs_info
	add-zsh-hook precmd prompt_simple_check_git_dirty
	add-zsh-hook precmd prompt_simple_check_git_arrows
	add-zsh-hook precmd prompt_simple_check_user_info
	add-zsh-hook precmd prompt_simple_check_venv

	add-zsh-hook precmd prompt_simple_prompt
	add-zsh-hook precmd prompt_simple_title
}

prompt_simple_prompt() {
	if [[ -n $PROMPT_SHOWN ]]; then
		PROMPT="${prompt_newline}"
	else
		export PROMPT_SHOWN=1
		PROMPT=''
	fi

	# Show directory information
	PROMPT+="%{$fg_bold[blue]%}%~"
	PROMPT+='%{$fg_bold[black]%}'
	PROMPT+="${vcs_info_msg_0_}${prompt_simple_git_dirty}"
	PROMPT+='%{$fg_bold[cyan]%}'
	PROMPT+="${prompt_simple_git_arrows}"
	PROMPT+='%{$fg_bold[magenta]%}'
	PROMPT+="${prompt_simple_venv}"

	# Show user information
	PROMPT+="${prompt_simple_user_info}"

	# Show prompt symbol
	PROMPT+="${prompt_newline}"
	PROMPT+="%(?.%{$fg_bold[magenta]%}.%{$fg_bold[red]%})"
	[[ "${TERM}" != "linux" ]] && PROMPT+=$'\u276F' || PROMPT+=">"
	PROMPT+=' %{$reset_colors%}'
}

prompt_simple_check_user_info() {
	local user=""

	[[ -n "${SSH_CONNECTION}" ]] && user=' %{$fg_bold[black]%}%n@%m'
	[[ ${UID} -eq 0 ]] && user=' %{$fg_bold[white]%}%n%{$fg_bold[black]%}@%m'

	prompt_simple_user_info="${user}"
}

prompt_simple_check_git_arrows() {
	local arrow_status=''
	local arrows=''

	prompt_simple_git_arrows=""

	git rev-parse --abbrev-ref @'{u}' &>|/dev/null || return

	arrow_status="$(git rev-list --left-right --count HEAD...@'{u}' 2>|/dev/null)"
	[[ ${?} -ne 0 ]] && return

	arrow_status=(${(ps:\t:)arrow_status})

	[[ ${arrow_status[1]} -gt 0 ]] && arrows+=$'\u21E1'
	[[ ${arrow_status[2]} -gt 0 ]] && arrows+=$'\u21E3'

	[[ -n ${arrows} ]] && prompt_simple_git_arrows=" ${arrows}"
}

prompt_simple_check_git_dirty() {
	if [[ -n $(git status -s 2> /dev/null) ]]; then
		prompt_simple_git_dirty='*'
	else
		prompt_simple_git_dirty=''
	fi
}

prompt_simple_check_venv() {
	if [[ -n ${VIRTUAL_ENV} ]]; then
		prompt_simple_venv=" ${VIRTUAL_ENV:t}"
	fi
}

prompt_simple_title() {
	case "${TERM}" in
		xterm* ) ;&
		rxvt* )		print -Pn "\e]0;%n@%m: %~\a";;
		screen* )	print -Pn "\ek%n@%m: %~\e\\";;
	esac
}

prompt_simple_setup
