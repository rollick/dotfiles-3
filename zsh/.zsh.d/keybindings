#!/bin/zsh
# Load necessary functions and modules
zmodload -e zsh/complist &>|/dev/null || zmodload -F zsh/complist
which keeper &>|/dev/null || autoload -U keeper && keeper
autoload -Uz url-quote-magic
zle -N self-insert url-quote-magic

# Functions and settings for the line editor
####################

function toggle-alias() {
	if [[ "${BUFFER[(w)1]}" == "="* ]]; then
		BUFFER[(w)1]="${BUFFER[(w)1]/=/}"
	else
		BUFFER[(w)1]="=${BUFFER[(w)1]}"
	fi
}
zle -N toggle-alias

# Toggle "sudo" at the beginning of the line
# Also replace $EDITOR with sudoedit and vis a vis.
# TODO: Handle sudo $EDITOR -> sudoedit
function toggle-sudo() {
	case ${BUFFER[(w)1]} in
		"=sudo" )			BUFFER="${BUFFER/=sudo /}";;
		"sudo" )			BUFFER="${BUFFER/sudo /}";;
		"sudoedit" ) 		BUFFER[(w)1]="${EDITOR:-vi}";;
		"vi" )				;&
		"${EDITOR:-vi}" )	BUFFER[(w)1]="sudoedit";;
		* )					BUFFER[(w)1]="sudo ${BUFFER[(w)1]}";;
	esac
}
zle -N toggle-sudo

# Hide commands from history
function hide-from-history() {
	if [[ "${BUFFER}" == \ * ]]; then
		BUFFER="${BUFFER/# /}"
	else
		BUFFER=" ${BUFFER}"
	fi
}
zle -N hide-from-history

# Expand global aliases after typing
function expand-global-alias() {
	local ga="${LBUFFER[(w)-1]}"

	if [[ -n ${ga} ]]; then
		LBUFFER[(w)-1]="${${galiases[${ga}]}:-${ga}}"
	fi
	zle self-insert
}
zle -N expand-global-alias

# Get help for a (incomplete) command, and then insert said command again
function get-help() {
	local cmd="${BUFFER[(w)1]}"

	zle push-line

	LBUFFER="${cmd} --help |\$PAGER"
}
zle -N get-help

# Show manpage for a (incomplete) command, and then insert said command again
function get-man() {
	local cmd="${BUFFER[(w)1]}"

	zle push-line

	LBUFFER="man 1 ${cmd}"
}
zle -N get-man

# Insert ISO date in the form of YYYY-MM-DD
function insert-iso-date() {
	LBUFFER+="$(date +%F)"
}
zle -N insert-iso-date
# Load widgets
[[ -r ${HOME}/.zsh.d/zle ]] && source ${HOME}/.zsh.d/zle

# Keybindings
####################
# Set emacs mode
bindkey -e

# Set keybindings
# To add keys to $key, see man 5 terminfo
typeset -A key
key[Home]=${terminfo[khome]}
key[End]=${terminfo[kend]}
key[Insert]=${terminfo[kich1]}
key[Delete]=${terminfo[kdch1]}
key[Up]=${terminfo[kcuu1]}
key[Down]=${terminfo[kcud1]}
key[Left]=${terminfo[kcub1]}
key[Right]=${terminfo[kcuf1]}
key[PageUp]=${terminfo[kpp]}
key[PageDown]=${terminfo[knp]}
key[ShiftLeft]=${terminfo[kLFT]}
key[ShiftRight]=${terminfo[kRIT]}

[[ -n ${key[Home]} ]] && bindkey "${key[Home]}" beginning-of-line
[[ -n ${key[End]} ]] && bindkey "${key[End]}" end-of-line
[[ -n ${key[ShiftLeft]} ]] && bindkey "${key[ShiftLeft]}" backward-word
[[ -n ${key[ShiftRight]} ]] && bindkey "${key[ShiftRight]}" forward-word
[[ -n ${key[Delete]} ]] && bindkey "${key[Delete]}" delete-char
[[ -n ${key[PageUp]} ]] && bindkey "${key[PageUp]}" history-beginning-search-backward
[[ -n ${key[PageDown]} ]] && bindkey "${key[PageDown]}" history-beginning-search-forward
[[ -n ${key[Up]} ]] && bindkey "${key[Up]}" history-beginning-search-backward
[[ -n ${key[Down]} ]] && bindkey "${key[Down]}" history-beginning-search-forward

bindkey	"^B"					backward-kill-word
bindkey	"^W"					kill-word
bindkey "^X "					hide-from-history
bindkey	"^Xd"					insert-iso-date
bindkey	"^Xe"					expand-word
bindkey	"^Xh"					get-help
bindkey	"^Xk"					insert-kept-result
bindkey	"^Xm"					get-man
bindkey	"^Xs"					toggle-sudo
bindkey "^X="					toggle-alias
bindkey	" "						expand-global-alias
bindkey -M menuselect	"i"		accept-and-menu-complete

# Finally, make sure the terminal is in application mode, when zle is
# active. Only then are the values from $terminfo valid.
if (( ${+terminfo[smkx]} )) && (( ${+terminfo[rmkx]} )); then
    function zle-line-init () {
        print -n "${terminfo[smkx]}"
    }
    function zle-line-finish () {
        print -n "${terminfo[rmkx]}"
    }
    zle -N zle-line-init
    zle -N zle-line-finish
fi

# Clean up
unset key
#!/bin/zsh
