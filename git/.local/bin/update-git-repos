#!/bin/bash
# Copyright (C) 2016-2017 by Raphael Scholer
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.
print_help () {
	echo -e "usage: $(basename "${0}") [OPTION]... [REPO]\n"
	echo    'Update all remote Git repoistories.'
	echo    'If REPO is not supplied update all repositories.'
	echo -e '\noptional arguments:'
	echo -e '\t--help\t\tdisplay this help and exit'
	echo -e '\t--version\toutput version information and exit'
}

print_version() {
	echo 'Copyright (C) 2016 by Raphael Scholer'
	echo
	echo 'Permission is hereby granted, free of charge, to any person obtaining a copy'
	echo 'of this software and associated documentation files (the "Software"), to deal'
	echo 'in the Software without restriction, including without limitation the rights'
	echo 'to use, copy, modify, merge, publish, distribute, sublicense, and/or sell'
	echo 'copies of the Software, and to permit persons to whom the Software is'
	echo 'furnished to do so, subject to the following conditions:'
	echo
	echo 'The above copyright notice and this permission notice shall be included in'
	echo 'all copies or substantial portions of the Software.'
	echo
	echo 'THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR'
	echo 'IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,'
	echo 'FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE'
	echo 'AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER'
	echo 'LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,'
	echo 'OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN'
	echo 'THE SOFTWARE.'
}

if [[ "${1}" == "--help" ]]; then
	print_help
elif [[ "${1}" == "--version" ]]; then
	print_version
else
	COLOR_CLEAR="\e[m"
	COLOR_MAIN="\e[;1m"
	COLOR_OTHER="\e[1;34m"
	FIRST_REPO=0
	XDG_DOCUMENTS_DIR="${XDG_DOCUMENTS_DIR:-${HOME}/Documents}"

	if [[ -n "${1}" ]]; then
		name=$(basename "${1}")
		header="${COLOR_OTHER}::${COLOR_CLEAR} ${COLOR_MAIN}${name}${COLOR_CLEAR}"
		echo -e "${header}"
		(cd "${1}" && git pull)
	else
		for d in "${XDG_DOCUMENTS_DIR}/Code/Remote"/*; do
			name=$(basename "${d}")
			header="${COLOR_OTHER}::${COLOR_CLEAR} ${COLOR_MAIN}${name}${COLOR_CLEAR}"
			if [[ "${FIRST_REPO}" -eq 0 ]]; then
				FIRST_REPO=1
				echo -e "${header}"
			else
				echo -e "\n${header}"
			fi
			(cd "${d}" && git pull)
		done
	fi
fi
