#!/bin/bash
print_item() {
	# Print menu item.
	# ${1} -- Label
	# ${2} -- Command
	if [[ ! -z ${2} ]]; then
		echo "<item label=\"${1}\">"
		echo "<action name=\"Execute\"><command>${2}</command></action>"
		echo "</item>"
	else
		echo "<item label=\"${1}\" />"
	fi
}

print_separator() {
	# Print separator.
	# ${1} -- Label
	if [[ -z ${1} ]]; then
		echo "<separator />"
	else
		echo "<separator label=\"${1}\"/>"
	fi
}

control_state() {
	# Print control state
	# ${1} -- Control
	left=$(amixer sget ${1}| grep "Left:" | cut -d " " -f 9| tr -d "\[\]")
	if [[ "${left}" != "" ]]; then
		echo ${left}
	else
		echo $(amixer sget ${1}| grep "Mono:" | cut -d " " -f 8| tr -d "\[\]")
	fi
}

control_vol() {
	# Get volume of control in percent
	# ${1} -- Control
	local left

	left=$(amixer sget ${1}| grep "Front Left:" | cut -d " " -f 7| tr -d "\[\]\%")

	if [[ "${left}" != "" ]]; then
		echo ${left}
	else
		echo $(amixer sget ${1}| grep "Mono:" | cut -d " " -f 6| tr -d "\[\]\%")
	fi
}

jack_state() {
	# Get state of Audio Jack.
	# ${1} -- Audio Jack, eg. "Headphone Jack"
	local state

	state=$(amixer -c 0 contents| grep --after 2 "${1}"| awk -F "=" 'NR == 3 {print $2}')
	if [[ "${state}" == "on" ]]; then
		echo "Connected"
	else
		echo "Disconnected"
	fi
}

vol_menu() {
	# Return a menu to select volume.
	# Current volume is displayed as a labeled separator.
	#
	# This function might be exported into it's own script.
	#
	# $1 = id
	# $2 = control
	local i
	local cur
	local mod
	cur=$(control_vol ${2})

	if [[ $(( ${cur} % 5 )) -ne 0 ]]; then
		mod=$(( $cur % 5 ))
		if [[ ${mod} -ge 3 ]]; then
			cur=$(( $cur - $mod + 5 ))
		else
			cur=$(( $cur - $mod ))
		fi
	fi

	echo "<menu label=\"Volume\" id=\"${1}\">"
	for i in $(seq 0 5 100); do
		if [[ ${i} -ne ${cur} ]]; then
			print_item "${i}%" "amixer sset ${2} ${i}%"
		else
			print_separator "${cur}%"
		fi
	done
	echo '</menu>'
}

echo "<openbox_pipe_menu>"
	print_item "Open mixer" "urxvtc -e alsamixer"

	if amixer| grep -q "Speaker"; then
		print_separator "Speaker ($(jack_state "Speaker"))"
		if [[ $(control_state "Speaker") == "on" ]]; then
			print_item "Mute" "amixer sset Speaker toggle"
		else
			print_item "Unmute" "amixer sset Speaker toggle"
		fi
		vol_menu "vol-speaker" "Speaker"
	fi

	print_separator "Headphones ($(jack_state "Headphone Jack"))"
	if [[ $(control_state "Headphone") == "on" ]]; then
		print_item "Mute" "amixer sset Headphone toggle"
	else
		print_item "Unmute" "amixer sset Headphone toggle"
	fi
	vol_menu "vol-headphone" "Headphone"

	print_separator "Master"
	if [[ $(control_state "Master") == "on" ]]; then
		print_item "Mute" "amixer sset Master toggle"
	else
		print_item "Unmute" "amixer sset Master toggle"
	fi
	vol_menu "vol-master" "Master"
echo "</openbox_pipe_menu>"
