#!/bin/env python
# Copyright (C) 2015-2016 by Raphael Scholer
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.
"""Configuration for i3pystatus."""
import collections
import sys

import i3pystatus
import i3pystatus.updates.cower
import i3pystatus.updates.pacman


COLOR_DEFAULT = None
COLOR_DISABLED = '#afb8c5'
COLOR_INFORMATION = '#cc575d'


def main():
    """Configure and run i3pystatus."""
    modules = collections.OrderedDict()
    modules['clock'] = {
        'color': COLOR_DEFAULT,
        'format': '%Y-%m-%d %H:%M',
    }
    modules['alsa'] = {
        'color': COLOR_DEFAULT,
        'color_muted': COLOR_DISABLED,
        'format': '\uf028 {volume}%',  # fa-volume-up
        'format_muted': '\uf026   {volume}%',  # fa-volume-off
        'mixer': 'Headphone',
    }
    modules['keyboard_locks'] = {
        'caps_off': '\U0001f130',  # Squared Latin Capital Letter A
        'caps_on': '\U0001f170',  # Negative Squared Capital Letter A
        'color': COLOR_DEFAULT,
        'format': '{caps}{num}{scroll}',
        'num_off': '\U0001f13d',  # Squared Latin Capital Letter N
        'num_on': '\U0001f17d',  # Negative Squared Latin Captial Letter N
        'scroll_off': '\U0001f142',  # Squared Latin Captial Letter S
        'scroll_on': '\U0001f182',  # Negative Squared Latin Capital Letter S
    }
    modules['network'] = {
        'color_down': COLOR_DISABLED,
        'color_up': COLOR_DEFAULT,
        'detect_active': True,
        'dynamic_color': False,
        'format_active_up': {
            'e*': '\uf0e8',  # fa-sitemap
            'w*': '\uf1eb',  # fa-wifi
        },
        'format_down': '\uf110',  # fa-spinner
    }
    modules['online'] = {
        'color': COLOR_DEFAULT,
        'color_offline': COLOR_DISABLED,
        'format_offline': '\uf127',  # fa-unlink
        'format_online': '\uf0c1',  # fa-link
    }
    modules['cmus'] = {
        'color': COLOR_DEFAULT,
        'format': (
            '{status}'
            '[ {artist} - {title} - {album}]'
            '[ ({song_elapsed:%M:%S}/{song_length:%M:%S})]'
        ),
        'format_not_running': '',
        'status': {
            'paused': '\uf04c ',  # fa-pause
            'playing': '\uf04b ',  # fa-play
            'stopped': '\uf04d',  # fa-stop
        },
    }
    modules['updates'] = {
        'backends': (
            i3pystatus.updates.cower.Cower,
            i3pystatus.updates.pacman.Pacman,
        ),
        'color': COLOR_INFORMATION,
        'format': '\uf071 {Pacman}/{Cower}',  # fa-exclamation-triangle
        'format_no_updates': '',
        'format_working': '',
        'interval': 10 * 60,
    }

    status = i3pystatus.Status(standalone=True, click_events=False)

    for module, config in modules.items():
        status.register(module, **config)

    status.run()


if __name__ == '__main__':
    sys.exit(main())
