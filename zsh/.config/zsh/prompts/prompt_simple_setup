#!/bin/zsh

prompt_simple_check_git_arrows() {
	local arrow_status=''
	local arrows=''

	prompt_simple_git_arrows=""

	git rev-parse --abbrev-ref @'{u}' &>|/dev/null || return

	arrow_status="$(git rev-list --left-right --count HEAD...@'{u}' 2>|/dev/null)"
	[[ ${?} -ne 0 ]] && return

	arrow_status=(${(ps:\t:)arrow_status})

	[[ ${arrow_status[1]} -gt 0 ]] && arrows+=$'\u21E1'
	[[ ${arrow_status[2]} -gt 0 ]] && arrows+=$'\u21E3'

	[[ -n ${arrows} ]] && prompt_simple_git_arrows=" ${arrows}"
}

prompt_simple_check_git_dirty() {
	if [[ -n $(git status -s 2> /dev/null) ]]; then
		prompt_simple_git_dirty='*'
	else
		prompt_simple_git_dirty=''
	fi
}

prompt_simple_check_user_info() {
	local host="%{$fg_bold[white]%}%m"
	local separator="%{$fg_bold[white]%}@"
	local user="%{$fg_bold[white]%}%n"

	if [[ "${LOGNAME}" != "$(id -nu)" || $EUID -eq 0 || -n $SSH_CONNECTION ]]; then
		[[ $EUID -eq 0 ]] && user="%{$fg_bold[red]%}%n"

		[[ -n "${SSH_CONNECTION}" ]] && host="%{$fg_bold[green]%}%m"

		prompt_simple_user_info="${user}${separator}${host}"
	else
		prompt_simple_user_info=''
	fi
}

prompt_simple_check_venv() {
	if [[ -n ${VIRTUAL_ENV} ]]; then
		prompt_simple_venv="${VIRTUAL_ENV:t}"
	else
		prompt_simple_venv=''
	fi
}

prompt_simple_set_prompt() {
	if [[ -n $PROMPT_SHOWN || -n $SSH_CONNECTION ]]; then
		PROMPT="${prompt_newline}"
	else
		export PROMPT_SHOWN=1
		PROMPT=''
	fi

	# Show directory information
	# FIXME: There has to be a more elegant way
	if  [[ -n ${LS_COLORS} ]]; then
		local dircolor=${$(print -l ${(s.:.)LS_COLORS} |grep "^di=")//di=/}
		PROMPT+=$(print "\e[${dircolor}m%~\e[0m")
	else
		PROMPT+="%{$fg[yellow]%}%~"
	fi

	if [[ -n ${vcs_info_msg_0_} ]]; then
		PROMPT+="%{$reset_color%}"
		PROMPT+=" %{$fg_bold[black]%}"
		PROMPT+="${vcs_info_msg_0_}${prompt_simple_git_dirty}"
		PROMPT+="%{$fg_bold[cyan]%}"
		PROMPT+="${prompt_simple_git_arrows}"
	fi
	if [[ -n ${prompt_simple_venv} ]]; then
		PROMPT+="%{$reset_color%}"
		PROMPT+=" %{$fg_bold[magenta]%}"
		PROMPT+="${prompt_simple_venv}"
	fi

	# Show user information
	if [[ -n ${prompt_simple_user_info} ]]; then
		PROMPT+="%{$reset_color%}"
		PROMPT+=" ${prompt_simple_user_info}"
	fi

	# Show prompt symbol
	PROMPT+="%{$reset_color%}"
	PROMPT+="${prompt_newline}"
	PROMPT+="${prompt_simple_symbol}"
	PROMPT+="%{$reset_color%} "
}

prompt_simple_set_prompt2() {
	PROMPT2="%{$fg_bold[black]%}%_"
	PROMPT2+="%{$reset_color%}"
	PROMPT2+=" ${prompt_simple_symbol}"
	PROMPT2+="%{$reset_color%} "
}

prompt_simple_set_symbol() {
	prompt_simple_symbol="%(?.%{$fg_bold[blue]%}.%{$fg_bold[red]%})"

	if [[ "${TERM}" != 'linux' ]]; then
		prompt_simple_symbol+=$'\u276F'
	else
		prompt_simple_symbol+='>'
	fi
}

prompt_simple_set_title() {
	local title=''
	local user=''

	if [[ "${LOGNAME}" != "$(id -nu)" || -n $SSH_CONNECTION ]]; then
		user='%n@%m: '
	fi

	title="${user}%~ - zsh"

	case "${TERM}" in
		screen* )  print -Pn "\ek${title}\e\\";;
		*       )  print -Pn "\e]0;${title}\a";;
	esac
}

##############
# Setup prompt
##############
# Options for simple prompt
##################
prompt_opts=(cr subst percent)
PROMPT_EOL_MARK=''

# Setup vcs_info
zstyle ':vcs_info:*' enable git
zstyle ':vcs_info:*' max-exports 2
zstyle ':vcs_info:*' use-simple true
zstyle ':vcs_info:git*' actionformats '%b|%a'
zstyle ':vcs_info:git*' formats '%b'

# Setup misc. prompts
SPROMPT='zsh: correct %R to %r ([Y]es/[N]o/[E]dit/[A]bort) '

# Disable virtualenv from setting PS1
export VIRTUAL_ENV_DISABLE_PROMPT=1

#########################
# Initialize precmd hooks
#########################
() {
	local hook
	local hooks

	hooks=(
		'prompt_simple_check_git_arrows'
		'prompt_simple_check_git_dirty'
		'prompt_simple_check_user_info'
		'prompt_simple_check_venv'
		'vcs_info'

		'prompt_simple_set_symbol'
		'prompt_simple_set_prompt'
		'prompt_simple_set_prompt2'
		'prompt_simple_set_title'
	)

	for hook in "${(@)hooks}"; do
		add-zsh-hook precmd "${hook}"
	done
}
