#!/bin/bash
# Copyright (C) 2016 by Raphael Scholer
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.

XPID=$(ps ax |grep Xorg |grep " ${DISPLAY} " |awk '{print $1}')
state_file="/tmp/xautolock_${USER}_${XPID}"

disable_screen_blanking() {
	xset -dpms
	xset s off
}

disable_screensaver() {
	xautolock -disable
}

do_disable() {
	case "${1}" in
		"--help" ) print_help disable
		           exit;;
		""       ) true;;
		*        ) print_help disable
		           exit;;
	esac
	disable_screensaver
	disable_screen_blanking
	show_notification "Screensaver is now disabled."
	save_state "disabled"
}

do_enable() {
	case "${1}" in
		"--help" ) print_help enable
		           exit;;
		"--now"  ) true;;
		""       ) true;;
		*        ) print_help enable
	               exit;;
	esac
	enable_screensaver
	enable_screen_blanking

	if [[ "${1}" == "--now" ]]; then
		sleep 1
		xautolock -locknow
	fi

	show_notification "Screensaver is now enabled."
	save_state "enabled"
}

do_print_status() {
	case "${1}" in
		"--help" ) print_help status
		           exit;;
		""       ) true;;
		*        ) print_help status
		           exit;;
	esac

	case "$(read_state)" in
		'disabled' ) echo "Xautolock is disabled.";;
		'enabled'  ) echo "Xautolock is enabled.";;
		*          ) do_enable
		             echo "Xautolock is enabled";;
	esac
}

do_toggle_state() {
	case "${1}" in
		"--help" ) print_help toggle
		           exit;;
	   "--now"   ) true;;
		""       ) true;;
		*        ) print_help toggle
		           exit;;
	esac

	case "$(read_state)" in
		"enabled"  ) do_disable;;
		"disabled" ) do_enable "${1}";;
	esac
}

enable_screen_blanking() {
	xset +dpms
	xset s on
}

enable_screensaver() {
	xautolock -enable
}

print_help() {
	if [[ "${1}" == "enable" ]]; then
		echo -e 'xautolockctl enable [OPTIONS]\n'
		echo -e 'Enable xautolock.\n'
		echo    '    --help     display this help and exit'
		echo    '    --now      enable and run screensaver now'
	elif [[ "${1}" == "disable" ]]; then
		echo -e 'xautolockctl disable [OPTIONS]\n'
		echo -e 'Disable xautolock.\n'
		echo    '    --help     display this help and exit'
	elif [[ "${1}" == "status" ]]; then
		echo -e 'xautolockctl status [OPTIONS]\n'
		echo -e 'Print status of xautolock.\n'
		echo    '    --help     display this help and exit'
	elif [[ "${1}" == "toggle" ]]; then
		echo -e 'xautolockctl toggle [OPTIONS]\n'
		echo -e 'Toggle xautolock on/off.\n'
		echo    '    --help     display this help and exit'
		echo    '    --now      when enabling xautolock run screensaver now'
	else
		echo -e 'xautolockctl [COMMAND] [OPTIONS]\n'
		echo -e 'Enable or disable  xautolock.\n'
		echo    '    --help     display this help and exit'
		echo    '    --version  output version information and exit'
		echo
		echo    'Commands:'
		echo    '    enable     enable xautolock'
		echo    '    disable    disable xautolock'
		echo    '    status     print status of xautolock'
		echo    '    toggle     toggle xautolock on/off'
	fi
}

print_version() {
	echo 'Copyright (C) 2016 by Raphael Scholer'
	echo
	echo 'Permission is hereby granted, free of charge, to any person obtaining a copy'
	echo 'of this software and associated documentation files (the "Software"), to deal'
	echo 'in the Software without restriction, including without limitation the rights'
	echo 'to use, copy, modify, merge, publish, distribute, sublicense, and/or sell'
	echo 'copies of the Software, and to permit persons to whom the Software is'
	echo 'furnished to do so, subject to the following conditions:'
	echo
	echo 'The above copyright notice and this permission notice shall be included in'
	echo 'all copies or substantial portions of the Software.'
	echo
	echo 'THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR'
	echo 'IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,'
	echo 'FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE'
	echo 'AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER'
	echo 'LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,'
	echo 'OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN'
	echo 'THE SOFTWARE.'
}

read_state() {
	if [[ -f "${state_file}" ]]; then
		cat "${state_file}"
	else
		echo "enabled"
	fi
}

save_state() {
	echo "${1}" > "${state_file}"
}

show_notification() {
	local icons=(
		"/usr/share/icons/elementary-xfce/apps/48/screensaver.svg"
		"/usr/share/icons/elementary-xfce/apps/48/screensaver.png"
		"/usr/share/icons/gnome/48x48/apps/screensaver.png"
		"/usr/share/icons/gnome/48x48/apps/screensaver.svg"
	)
	local timeout=3000
	local title="Xautolock"
	local urgency="low"

	for icon in "${icons[@]}"; do
		[[ -f "${icon}" ]] && break
	done

	notify-send --expire-time="${timeout}" --urgency="${urgency}" --icon="${icon}" "${title}" "${1}"
}

###############
# Main function
###############

command="${1}"
shift

case "${command}" in
	'--help'    ) print_help;;
	'--version' ) print_version;;
	'enable'    ) do_enable "${1}";;
	'disable'   ) do_disable "${1}";;
	'status'	) do_print_status "${1}";;
	'toggle'    ) do_toggle_state "${1}";;
	*           ) print_help;;
esac
